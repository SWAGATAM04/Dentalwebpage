---
export interface Props {
  text: string;
  href?: string;
  variant?: 'primary' | 'secondary' | 'outline' | 'text';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  type?: 'button' | 'submit' | 'reset';
  onClick?: string;
  target?: string;
  rel?: string;
}

const {
  text,
  href,
  variant = 'primary',
  size = 'md',
  class: className = '',
  type = 'button',
  onClick,
  target,
  rel,
} = Astro.props;

const variants = {
  primary: 'bg-primary-600 hover:bg-primary-700 text-white shadow-sm',
  secondary: 'bg-secondary-600 hover:bg-secondary-700 text-white shadow-sm',
  outline: 'bg-transparent border border-primary-600 text-primary-600 hover:bg-primary-50',
  text: 'bg-transparent text-primary-600 hover:text-primary-700 shadow-none',
};

const sizes = {
  sm: 'text-sm px-3 py-1.5',
  md: 'text-base px-4 py-2',
  lg: 'text-lg px-4 py-2 font-semibold whitespace-nowrap',
};

const baseClasses = 'inline-flex items-center justify-center rounded-md font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2';
const classes = `${baseClasses} ${variants[variant]} ${sizes[size]} ${className}`;
---

{
  href ? (
    <a 
      href={href} 
      class={classes} 
      target={target} 
      rel={rel}
    >
      {text}
      <slot />
    </a>
  ) : (
    <button 
      type={type} 
      class={classes} 
      onclick={onClick}
    >
      {text}
      <slot />
    </button>
  )
}