---
import Button from './Button.astro';
import { clinicInfo } from '../utils/clinicInfo';
---

<div id="booking-popup" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center hidden">
  <div class="bg-white rounded-lg shadow-lg w-full max-w-lg mx-4 overflow-hidden">
    <div class="bg-primary-600 p-4 text-white">
      <div class="flex justify-between items-center">
        <h3 class="text-xl font-bold font-heading">Book Your Appointment</h3>
        <button id="close-popup" class="text-white hover:text-gray-200">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>
    
    <div class="p-6">
      <form id="booking-form" class="space-y-4">
        <div>
          <label for="fullName" class="block text-sm font-medium text-gray-700 mb-1">Full Name*</label>
          <input 
            type="text" 
            id="fullName" 
            name="fullName" 
            required 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
          />
        </div>
        
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email*</label>
          <input 
            type="email" 
            id="email" 
            name="email" 
            required 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
          />
        </div>
        
        <div>
          <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">Phone Number*</label>
          <input 
            type="tel" 
            id="phone" 
            name="phone" 
            required 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
          />
        </div>
        
        <div>
          <label for="preferredDate" class="block text-sm font-medium text-gray-700 mb-1">Preferred Date*</label>
          <input 
            type="date" 
            id="preferredDate" 
            name="preferredDate" 
            required 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
          />
        </div>
        
        <div>
          <label for="preferredTime" class="block text-sm font-medium text-gray-700 mb-1">Preferred Time*</label>
          <select 
            id="preferredTime" 
            name="preferredTime" 
            required 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
          >
            <option value="">Select a time</option>
            <option value="Morning">Morning (8:00 AM - 12:00 PM)</option>
            <option value="Afternoon">Afternoon (12:00 PM - 5:00 PM)</option>
          </select>
        </div>
        
        <div>
          <label for="reasonForVisit" class="block text-sm font-medium text-gray-700 mb-1">Reason for Visit*</label>
          <select 
            id="reasonForVisit" 
            name="reasonForVisit" 
            required 
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
          >
            <option value="">Select a reason</option>
            <option value="Regular Checkup">Regular Checkup</option>
            <option value="Teeth Cleaning">Teeth Cleaning</option>
            <option value="Dental Emergency">Dental Emergency</option>
            <option value="Consultation">Consultation</option>
            <option value="Other">Other</option>
          </select>
        </div>
        
        <div class="flex items-center">
          <input 
            type="checkbox" 
            id="smsConsent" 
            name="smsConsent" 
            required 
            class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
          />
          <label for="smsConsent" class="ml-2 block text-sm text-gray-700">
            I consent to being contacted by {clinicInfo.name} regarding my appointment request.*
          </label>
        </div>
        
        <div>
          <Button 
            type="submit" 
            text="Submit Request" 
            variant="primary" 
            class="w-full"
          />
        </div>

        <p class="text-xs text-gray-500 mt-4">
          This form is protected by reCAPTCHA and the Google 
          <a href="https://policies.google.com/privacy" target="_blank" rel="noopener noreferrer" class="text-primary-600 hover:text-primary-700">Privacy Policy</a> and 
          <a href="https://policies.google.com/terms" target="_blank" rel="noopener noreferrer" class="text-primary-600 hover:text-primary-700">Terms of Service</a> apply.
        </p>
      </form>
    </div>
  </div>
</div>

<script>
  import { submitForm } from '../utils/forms';
  
  document.addEventListener('DOMContentLoaded', () => {
    const bookingButtons = document.querySelectorAll('[data-booking]');
    const popup = document.getElementById('booking-popup');
    const closePopup = document.getElementById('close-popup');
    const bookingForm = document.getElementById('booking-form');
    
    bookingButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        popup.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
      });
    });
    
    closePopup.addEventListener('click', () => {
      popup.classList.add('hidden');
      document.body.style.overflow = '';
    });
    
    // Close when clicking outside the form
    popup.addEventListener('click', (e) => {
      if (e.target === popup) {
        popup.classList.add('hidden');
        document.body.style.overflow = '';
      }
    });
    
    if (bookingForm) {
      bookingForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        try {
          const formData = new FormData(bookingForm);
          const data = Object.fromEntries(formData.entries());
          
          await submitForm({
            ...data,
            formType: 'booking'
          });
          
          // Show success message
          bookingForm.innerHTML = `
            <div class="text-center py-6">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-success-500 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <h3 class="text-xl font-bold text-gray-800 mb-2">Booking Request Submitted!</h3>
              <p class="text-gray-600 mb-6">We'll contact you shortly to confirm your appointment.</p>
              <button id="close-success" class="px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors duration-200">Close</button>
            </div>
          `;
          
          document.getElementById('close-success')?.addEventListener('click', () => {
            if (popup) {
              popup.classList.add('hidden');
              document.body.style.overflow = '';
              
              // Reset form
              setTimeout(() => {
                location.reload();
              }, 300);
            }
          });
          
        } catch (error) {
          console.error('Error submitting form:', error);
          alert('Failed to submit form. Please try again later.');
        }
      });
    }
  });
</script>

